@page "/AddTodo2Edit/{Id:int}"
@using DomainOrEntities.Models
@using DomainOrEntities.ContractsOrInterfaces
@using UIElements
@inject ITodoHomeOrDaoOrRep TodoHomeOrDaoOrRep
@inject NavigationManager NavMgr


<div class="box">
    <h3>AddTodo2Edit</h3>
    <EditForm Model="@newTodoItem" OnValidSubmit="@AddNewTodo">
        <DataAnnotationsValidator/> 
        <ValidationSummary/>
        <div class="form-group field">
            <span>
                <label>User Id:</label>
            </span>
            <span>
                <InputNumber @bind-Value="newTodoItem.OwnerId" />
            </span>
        </div>
        <div class="form-group field">
            <span>
                <label>Title:</label>
            </span>
            <span>
                <InputTextArea rows="4" @bind-Value="newTodoItem.Title"/>
            </span>
        </div>
        <p class="actions">
            <button class="btn btn-outline-dark acceptbtn" type="submit">Create</button>
        </p>
    </EditForm>
    <label>Error label: <br/> ((..)) @errorLabel</label>
    @if (showModal)
    {
        <Modal>
            <p>You have successfully added a new Todo item. You should be very proud of yourself</p>
            <button @onclick="@Proceed">Wonderful</button>
        </Modal>
    }
</div>

@code {
    [Parameter]
    public int Id { get; set; }

    private Todo newTodoItem = new();
    private string errorLabel;

    private bool showModal;

    protected override async Task OnInitializedAsync()
    {
        if (Id == 0)
        {
            Id = 5;
        }
        newTodoItem = await TodoHomeOrDaoOrRep.GetByIdAsync(Id);
    //        return base.OnInitializedAsync();
    }

    private async Task AddNewTodo()
    {
        errorLabel = "";
        try
        {
            await TodoHomeOrDaoOrRep.AddAsync(newTodoItem);
            showModal = true;
            newTodoItem = new Todo();
        }
        catch (Exception e)
        {
            errorLabel = e.Message;
        }
    //NavMgr.NavigateTo("/Todos");
    }
    
    private void Proceed()
    {
        showModal = false;
        NavMgr.NavigateTo("/Todos");
    }
}